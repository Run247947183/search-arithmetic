class Solution {
    // 深度优先搜索算法
    public boolean wordBreak(String s, List<String> wordDict) {
        Queue<Integer> queue = new LinkedList<>();
        // list 用来判断以 end 为下标的位置是否判断过
        int[] list = new int[s.length()];
        queue.offer(0);
        while (!queue.isEmpty()) {
            int start = queue.poll();
            if (list[start] == 0) {
                for (int end = start + 1; end <= s.length(); end++) {
                    if (wordDict.contains(s.substring(start, end))) {
                        queue.offer(end);
                        if (end == s.length()) {
                            return true;
                        }
                    }
                }
            }
            list[start] = 1;
        }
        return false;
    }
}


